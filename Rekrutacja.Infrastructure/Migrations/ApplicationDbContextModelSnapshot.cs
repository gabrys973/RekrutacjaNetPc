// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rekrutacja.Infrastructure.DataAccess;

#nullable disable

namespace Rekrutacja.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Rekrutacja.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Służbowy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Prywatny"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Inny"
                        });
                });

            modelBuilder.Entity("Rekrutacja.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomSubcategory")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CustomSubcategory = "",
                            DateOfBirth = new DateTime(1997, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adamKowal@gmail.com",
                            Name = "Adam",
                            Password = "ypVYDhynIwMsT8lVkV1tyg==;BHHVobjaCMOQ99zejjnt8NyefwVq7F4wNd4MU/uaTBE=",
                            PhoneNumber = "+48123321123",
                            SubcategoryId = 1,
                            Surname = "Kowalski"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CustomSubcategory = "domowy",
                            DateOfBirth = new DateTime(1980, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gabnowa@gmail.com",
                            Name = "Gabriel",
                            Password = "L+0a39rxi2Jo/3DpmVa3GQ==;X7hX4aBVhc+7sioY9wXk2ypssIjvhltlQuTaupJSbPs=",
                            PhoneNumber = "485216948",
                            Surname = "Nowak"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CustomSubcategory = "",
                            DateOfBirth = new DateTime(2000, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zancia123@gmail.com",
                            Name = "Żaneta",
                            Password = "2FizU1vwmTqce9CzMPBM9w==;HiorraGCAfyQfF15LvIFVsIerFqw0kjVk8L4IdD5gWg=",
                            PhoneNumber = "871594862",
                            Surname = "Pewna"
                        });
                });

            modelBuilder.Entity("Rekrutacja.Domain.Entities.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Szef"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Klient"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Pracownik"
                        });
                });

            modelBuilder.Entity("Rekrutacja.Domain.Entities.Contact", b =>
                {
                    b.HasOne("Rekrutacja.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rekrutacja.Domain.Entities.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("Category");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Rekrutacja.Domain.Entities.Subcategory", b =>
                {
                    b.HasOne("Rekrutacja.Domain.Entities.Category", null)
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rekrutacja.Domain.Entities.Category", b =>
                {
                    b.Navigation("Subcategories");
                });
#pragma warning restore 612, 618
        }
    }
}
